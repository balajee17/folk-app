def node_require(script)
   # Resolve script with node to allow for hoisting
   require Pod::Executable.execute_command('node', ['-p',
     "require.resolve(
       '#{script}',
       {paths: [process.argv[1]]},
     )", __dir__]).strip
 end

 node_require('react-native/scripts/react_native_pods.rb')
 node_require('react-native-permissions/scripts/setup.rb')
    
platform :ios, min_ios_version_supported
prepare_react_native_project!


setup_permissions([
  # 'AppTrackingTransparency',
  # 'Bluetooth',
   'Calendars',
  # 'CalendarsWriteOnly',
   'Camera',
  # 'Contacts',
  # 'FaceID',
  # 'LocationAccuracy',
  # 'LocationAlways',
  # 'LocationWhenInUse',
  # 'MediaLibrary',
  # 'Microphone',
  # 'Motion',
   'Notifications',
  'PhotoLibrary',
  'PhotoLibraryAddOnly',
  # 'Reminders',
  # 'Siri',
  # 'SpeechRecognition',
  # 'StoreKit',
])



linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'FOLK' do
  $RNFirebaseAsStaticFramework = true
  config = use_native_modules!
  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  #   :fabric_enabled => true,
  # :hermes_enabled => true,
  )

  pod 'GoogleUtilities', :modular_headers => true;
  # pod 'Firebase', :modular_headers => true
  # pod 'FirebaseCoreInternal', :modular_headers => true
  pod 'FirebaseCore', :modular_headers => true
  # pod 'rn-fetch-blob', :path => '../node_modules/rn-fetch-blob'
  # pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  # pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'


  target 'FOLKTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
    )
  end
end
